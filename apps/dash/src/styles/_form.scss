form {
  .form-field:not(:has(input[type='checkbox'])) {
    display: grid;
    input {
      flex: 1;
    }
    .hint {
      height: 1rem;
    }

    // If the next sibling is also a form field, add some spacing
    &:has(+ .form-field) {
      .hint {
        margin-bottom: 0.5rem;
      }
    }
  }
  .form-field:has(input[type='checkbox']) {
    display: flex;
    label {
      flex: 1;
    }
  }
}

input {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: calc(var(--border-radius) / 2);
  transition: border 0.1s ease-in-out;
  background-color: var(--color-background);
  &:focus,
  &:focus-visible {
    outline-style: solid;
    outline-color: var(--color-border-focused);
    outline-width: 2px;
  }
  &.ng-invalid:not(.ng-pristine) {
    --color-border: var(--color-warn);
    --color-border-focused: var(--color-warn);
    &::placeholder {
      color: var(--color-warn);
    }
    + .hint {
      color: var(--color-warn);
    }
  }
}

.form-group {
  display: flex;
  place-items: center;
  width: 100%;
  > * {
    height: 33px;
  }
  > :first-child {
    flex: 1;
    font-size: 0.835rem;
    padding: 0.5rem 0.75rem;
    width: 100%;
  }
  &:has(input) {
    > * {
      border-color: var(--color-border);
      border-style: solid;
      border-width: 1px;
      &:not(:is(button)) {
        background-color: var(--color-background);
      }
      &:is(span) {
        width: 1.5rem;
      }
    }
    > :first-child {
      border-radius: var(--border-radius-input) 0 0 var(--border-radius-input);
      border-right: 0;
    }
    > :not(:first-child):not(:last-child) {
      border-right: 0;
      border-left: 0;
      border-radius: 0;
    }
    > :last-child {
      border-radius: 0 var(--border-radius-input) var(--border-radius-input) 0;
      border-left: 0;
      display: flex;
      place-items: center;
    }
    &:has(> input:focus) {
      outline-style: solid;
      outline-color: var(--color-border-focused);
      outline-width: 2px;
      border-radius: var(--border-radius-input);
      > input {
        outline: 0;
      }
    }
  }
}
